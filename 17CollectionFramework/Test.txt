Test case 1 (11.8 điểm): test_RandomNumberUtils
-------------- View --------------
Kết quả sai:
[]

Kết quả đúng:
[randomInt(), randomInt(int,int), randomIntLessThan(int), randomLong(), randomPositiveLong(), randomNegativeLong(), randomLong(long,long), randomLongGreaterThan(long), randomLongLessThan(long), randomDouble(), randomPositiveDouble(), randomNegativeDouble(), randomDouble(double,double), randomDoubleGreaterThan(double), randomDoubleLessThan(double)]

--------- Original code ---------
Kết quả sai:
[]\n

Kết quả đúng:
[randomInt(), randomInt(int,int), randomIntLessThan(int), randomLong(), randomPositiveLong(), randomNegativeLong(), randomLong(long,long), randomLongGreaterThan(long), randomLongLessThan(long), randomDouble(), randomPositiveDouble(), randomNegativeDouble(), randomDouble(double,double), randomDoubleGreaterThan(double), randomDoubleLessThan(double)]\n



Test case 2 (11.8 điểm): test_DatabaseUtils
-------------- View --------------
Kết quả sai:
[]

Kết quả đúng:
[update(com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), getInt(com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), getString(com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), getResultPackage(com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), executeQuery(java.lang.Class<?>,com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), executeQuery(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object), getInt(com.nordstrom.common.jdbc.utils.SProcAPI,java.lang.Object), getString(com.nordstrom.common.jdbc.utils.SProcAPI,java.lang.Object), getResultPackage(com.nordstrom.common.jdbc.utils.SProcAPI,java.lang.Object), executeStoredProcedure(java.lang.Class<?>,com.nordstrom.common.jdbc.utils.SProcAPI,java.lang.Object), executeStoredProcedure(java.lang.Class<?>,java.lang.String,java.lang.String,com.nordstrom.common.jdbc.Param), executeStatement(java.lang.Class<?>,java.sql.Connection,java.sql.PreparedStatement), getConnection(java.lang.String)]

--------- Original code ---------
Kết quả sai:
[]\n

Kết quả đúng:
[update(com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), getInt(com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), getString(com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), getResultPackage(com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), executeQuery(java.lang.Class<?>,com.nordstrom.common.jdbc.utils.QueryAPI,java.lang.Object), executeQuery(java.lang.Class<?>,java.lang.String,java.lang.String,java.lang.Object), getInt(com.nordstrom.common.jdbc.utils.SProcAPI,java.lang.Object), getString(com.nordstrom.common.jdbc.utils.SProcAPI,java.lang.Object), getResultPackage(com.nordstrom.common.jdbc.utils.SProcAPI,java.lang.Object), executeStoredProcedure(java.lang.Class<?>,com.nordstrom.common.jdbc.utils.SProcAPI,java.lang.Object), executeStoredProcedure(java.lang.Class<?>,java.lang.String,java.lang.String,com.nordstrom.common.jdbc.Param), executeStatement(java.lang.Class<?>,java.sql.Connection,java.sql.PreparedStatement), getConnection(java.lang.String)]\n


Test case 3 (11.8 điểm): test_OSInfo
-------------- View --------------
Kết quả sai:
[]

Kết quả đúng:
[getDefault(), osName(), version(), arch()]

--------- Original code ---------
Kết quả sai:
[]\n

Kết quả đúng:
[getDefault(), osName(), version(), arch()]\n

Test case 4 (11.8 điểm): test_VolumeInfo
-------------- View --------------
Kết quả sai:
[]

Kết quả đúng:
[getVolumeProps(), getVolumeProps(java.io.InputStream)]

--------- Original code ---------
Kết quả sai:
[]\n

Kết quả đúng:
[getVolumeProps(), getVolumeProps(java.io.InputStream)]\n

Test case 5 (11.8 điểm): test_RandomArrayUtils
-------------- View --------------
Kết quả sai:
[]

Kết quả đúng:
[randomArrayFrom(T[],com.google.common.collect.Range<java.lang.Integer>), randomArrayFrom(java.lang.Iterable<T>,com.google.common.collect.Range<java.lang.Integer>), randomArrayFrom(T[],int), randomArrayFrom(java.lang.Iterable<T>,int), randomArrayFrom(java.util.function.Supplier<T>,com.google.common.collect.Range<java.lang.Integer>), randomArrayFrom(java.util.function.Supplier<T>,int)]

--------- Original code ---------
Kết quả sai:
[]\n

Kết quả đúng:
[randomArrayFrom(T[],com.google.common.collect.Range<java.lang.Integer>), randomArrayFrom(java.lang.Iterable<T>,com.google.common.collect.Range<java.lang.Integer>), randomArrayFrom(T[],int), randomArrayFrom(java.lang.Iterable<T>,int), randomArrayFrom(java.util.function.Supplier<T>,com.google.common.collect.Range<java.lang.Integer>), randomArrayFrom(java.util.function.Supplier<T>,int)]\n

Test case 6 (11.8 điểm): test_PathUtils
-------------- View --------------
Kết quả sai:
[]

Kết quả đúng:
[fromObject(java.lang.Object), getPathForObject(java.lang.Object), getTargetPath(), getNextPath(java.nio.file.Path,java.lang.String,java.lang.String), getBaseDir()]

--------- Original code ---------
Kết quả sai:
[]\n

Kết quả đúng:
[fromObject(java.lang.Object), getPathForObject(java.lang.Object), getTargetPath(), getNextPath(java.nio.file.Path,java.lang.String,java.lang.String), getBaseDir()]\n

Test case 7 (11.8 điểm): test_DateUtils
-------------- View --------------
Kết quả sai:
[]

Kết quả đúng:
[isLeapDay(java.time.temporal.TemporalAccessor), atStartOfDay(java.util.Date), atEndOfDay(java.util.Date), dateToLocalDateTime(java.util.Date), localDateTimeToDate(java.time.LocalDateTime)]

--------- Original code ---------
Kết quả sai:
[]\n

Kết quả đúng:
[isLeapDay(java.time.temporal.TemporalAccessor), atStartOfDay(java.util.Date), atEndOfDay(java.util.Date), dateToLocalDateTime(java.util.Date), localDateTimeToDate(java.time.LocalDateTime)]\n

Test case 8 (11.8 điểm): test_RandomDateUtils
-------------- View --------------
Kết quả sai:
[]

Kết quả đúng:
[randomZonedDateTime(), randomZonedDateTime(java.time.ZonedDateTime,java.time.ZonedDateTime), randomFutureZonedDateTime(), randomZonedDateTimeAfter(java.time.ZonedDateTime), randomPastZonedDateTime(), randomZonedDateTimeBefore(java.time.ZonedDateTime), randomOffsetDateTime(), randomOffsetDateTime(java.time.OffsetDateTime,java.time.OffsetDateTime), randomFutureOffsetDateTime(), randomOffsetDateTimeAfter(java.time.OffsetDateTime), randomPastOffsetDateTime(), randomOffsetDateTimeBefore(java.time.OffsetDateTime), randomLocalDateTime(), randomLocalDateTime(java.time.LocalDateTime,java.time.LocalDateTime), randomFutureLocalDateTime(), randomLocalDateTimeAfter(java.time.LocalDateTime), randomPastLocalDateTime(), randomLocalDateTimeBefore(java.time.LocalDateTime), randomLocalDate(), randomLocalDate(java.time.LocalDate,java.time.LocalDate), randomFutureLocalDate(), randomLocalDateAfter(java.time.LocalDate), randomPastLocalDate(), randomLocalDateBefore(java.time.LocalDate), randomDate(), randomDate(java.util.Date,java.util.Date), randomFutureDate(), randomDateAfter(java.util.Date), randomPastDate(), randomDateBefore(java.util.Date), randomInstant(), randomInstant(java.time.Instant,java.time.Instant), randomFutureInstant(), randomInstantAfter(java.time.Instant), randomPastInstant(), randomInstantBefore(java.time.Instant), randomLocalTime(), randomLocalTime(java.time.LocalTime,java.time.LocalTime), randomLocalTimeAfter(java.time.LocalTime), randomLocalTimeBefore(java.time.LocalTime), random(java.time.temporal.TemporalField), random(java.time.temporal.TemporalField,long,long), randomAfter(java.time.temporal.TemporalField,long), randomBefore(java.time.temporal.TemporalField,long), randomMonthDay(), randomMonthDay(boolean), randomMonthDay(java.time.MonthDay,java.time.MonthDay), randomMonthDay(java.time.MonthDay,java.time.MonthDay,boolean), randomMonthDayAfter(java.time.MonthDay), randomMonthDayAfter(java.time.MonthDay,boolean), randomMonthDayBefore(java.time.MonthDay), randomMonthDayBefore(java.time.MonthDay,boolean), randomYearMonth(), randomYearMonth(java.time.YearMonth,java.time.YearMonth), randomFutureYearMonth(), randomYearMonthAfter(java.time.YearMonth), randomPastYearMonth(), randomYearMonthBefore(java.time.YearMonth), randomYear(), randomYear(java.time.Year,java.time.Year), randomYear(int,int), randomFutureYear(), randomYearAfter(java.time.Year), randomYearAfter(int), randomPastYear(), randomYearBefore(java.time.Year), randomYearBefore(int), randomFixedUtcClock(), randomFixedClock(), randomZoneId(), randomDayOfWeek(), randomMonth(), randomZoneOffset(), randomPeriod(), randomPositivePeriod(), randomNegativePeriod(), randomDuration(), randomPositiveDuration(), randomNegativeDuration()]

--------- Original code ---------
Kết quả sai:
[]\n

Kết quả đúng:
[randomZonedDateTime(), randomZonedDateTime(java.time.ZonedDateTime,java.time.ZonedDateTime), randomFutureZonedDateTime(), randomZonedDateTimeAfter(java.time.ZonedDateTime), randomPastZonedDateTime(), randomZonedDateTimeBefore(java.time.ZonedDateTime), randomOffsetDateTime(), randomOffsetDateTime(java.time.OffsetDateTime,java.time.OffsetDateTime), randomFutureOffsetDateTime(), randomOffsetDateTimeAfter(java.time.OffsetDateTime), randomPastOffsetDateTime(), randomOffsetDateTimeBefore(java.time.OffsetDateTime), randomLocalDateTime(), randomLocalDateTime(java.time.LocalDateTime,java.time.LocalDateTime), randomFutureLocalDateTime(), randomLocalDateTimeAfter(java.time.LocalDateTime), randomPastLocalDateTime(), randomLocalDateTimeBefore(java.time.LocalDateTime), randomLocalDate(), randomLocalDate(java.time.LocalDate,java.time.LocalDate), randomFutureLocalDate(), randomLocalDateAfter(java.time.LocalDate), randomPastLocalDate(), randomLocalDateBefore(java.time.LocalDate), randomDate(), randomDate(java.util.Date,java.util.Date), randomFutureDate(), randomDateAfter(java.util.Date), randomPastDate(), randomDateBefore(java.util.Date), randomInstant(), randomInstant(java.time.Instant,java.time.Instant), randomFutureInstant(), randomInstantAfter(java.time.Instant), randomPastInstant(), randomInstantBefore(java.time.Instant), randomLocalTime(), randomLocalTime(java.time.LocalTime,java.time.LocalTime), randomLocalTimeAfter(java.time.LocalTime), randomLocalTimeBefore(java.time.LocalTime), random(java.time.temporal.TemporalField), random(java.time.temporal.TemporalField,long,long), randomAfter(java.time.temporal.TemporalField,long), randomBefore(java.time.temporal.TemporalField,long), randomMonthDay(), randomMonthDay(boolean), randomMonthDay(java.time.MonthDay,java.time.MonthDay), randomMonthDay(java.time.MonthDay,java.time.MonthDay,boolean), randomMonthDayAfter(java.time.MonthDay), randomMonthDayAfter(java.time.MonthDay,boolean), randomMonthDayBefore(java.time.MonthDay), randomMonthDayBefore(java.time.MonthDay,boolean), randomYearMonth(), randomYearMonth(java.time.YearMonth,java.time.YearMonth), randomFutureYearMonth(), randomYearMonthAfter(java.time.YearMonth), randomPastYearMonth(), randomYearMonthBefore(java.time.YearMonth), randomYear(), randomYear(java.time.Year,java.time.Year), randomYear(int,int), randomFutureYear(), randomYearAfter(java.time.Year), randomYearAfter(int), randomPastYear(), randomYearBefore(java.time.Year), randomYearBefore(int), randomFixedUtcClock(), randomFixedClock(), randomZoneId(), randomDayOfWeek(), randomMonth(), randomZoneOffset(), randomPeriod(), randomPositivePeriod(), randomNegativePeriod(), randomDuration(), randomPositiveDuration(), randomNegativeDuration()]\n